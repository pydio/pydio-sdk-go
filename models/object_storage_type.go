// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ObjectStorageType Type of Gateway
// swagger:model objectStorageType
type ObjectStorageType string

const (

	// ObjectStorageTypeLOCAL captures enum value "LOCAL"
	ObjectStorageTypeLOCAL ObjectStorageType = "LOCAL"

	// ObjectStorageTypeS3 captures enum value "S3"
	ObjectStorageTypeS3 ObjectStorageType = "S3"

	// ObjectStorageTypeSMB captures enum value "SMB"
	ObjectStorageTypeSMB ObjectStorageType = "SMB"
)

// for schema
var objectStorageTypeEnum []interface{}

func init() {
	var res []ObjectStorageType
	if err := json.Unmarshal([]byte(`["LOCAL","S3","SMB"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		objectStorageTypeEnum = append(objectStorageTypeEnum, v)
	}
}

func (m ObjectStorageType) validateObjectStorageTypeEnum(path, location string, value ObjectStorageType) error {
	if err := validate.Enum(path, location, value, objectStorageTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this object storage type
func (m ObjectStorageType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateObjectStorageTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
