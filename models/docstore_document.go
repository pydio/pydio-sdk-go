// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DocstoreDocument docstore document
// swagger:model docstoreDocument
type DocstoreDocument struct {

	// data
	Data string `json:"Data,omitempty"`

	// ID
	ID string `json:"ID,omitempty"`

	// indexable meta
	IndexableMeta string `json:"IndexableMeta,omitempty"`

	// owner
	Owner string `json:"Owner,omitempty"`

	// type
	Type DocstoreDocumentType `json:"Type,omitempty"`
}

// Validate validates this docstore document
func (m *DocstoreDocument) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DocstoreDocument) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("Type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DocstoreDocument) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DocstoreDocument) UnmarshalBinary(b []byte) error {
	var res DocstoreDocument
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
