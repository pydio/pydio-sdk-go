// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LogTimeRangeCursor Ease implementation of data navigation for a chart.
// swagger:model logTimeRangeCursor
type LogTimeRangeCursor struct {

	// count
	Count int32 `json:"Count,omitempty"`

	// ref time
	RefTime int32 `json:"RefTime,omitempty"`

	// rel
	Rel LogRelType `json:"Rel,omitempty"`
}

// Validate validates this log time range cursor
func (m *LogTimeRangeCursor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LogTimeRangeCursor) validateRel(formats strfmt.Registry) error {

	if swag.IsZero(m.Rel) { // not required
		return nil
	}

	if err := m.Rel.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("Rel")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LogTimeRangeCursor) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LogTimeRangeCursor) UnmarshalBinary(b []byte) error {
	var res LogTimeRangeCursor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
