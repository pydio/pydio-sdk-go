// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JobsActionOutput Standard output of an action. Success value is required
// other are optional
// swagger:model jobsActionOutput
type JobsActionOutput struct {

	// error string
	ErrorString string `json:"ErrorString,omitempty"`

	// ignored
	Ignored bool `json:"Ignored,omitempty"`

	// Json body
	// Format: byte
	JSONBody strfmt.Base64 `json:"JsonBody,omitempty"`

	// raw body
	// Format: byte
	RawBody strfmt.Base64 `json:"RawBody,omitempty"`

	// string body
	StringBody string `json:"StringBody,omitempty"`

	// success
	Success bool `json:"Success,omitempty"`
}

// Validate validates this jobs action output
func (m *JobsActionOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateJSONBody(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRawBody(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobsActionOutput) validateJSONBody(formats strfmt.Registry) error {

	if swag.IsZero(m.JSONBody) { // not required
		return nil
	}

	if err := validate.FormatOf("JsonBody", "body", "byte", m.JSONBody.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *JobsActionOutput) validateRawBody(formats strfmt.Registry) error {

	if swag.IsZero(m.RawBody) { // not required
		return nil
	}

	if err := validate.FormatOf("RawBody", "body", "byte", m.RawBody.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JobsActionOutput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobsActionOutput) UnmarshalBinary(b []byte) error {
	var res JobsActionOutput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
